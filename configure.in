AC_INIT([Coquelicot], [3.2.0],
        [Guillaume Melquiond <guillaume.melquiond@inria.fr>],
        [coquelicot])

m4_divert_push(99)
if test "$ac_init_help" = "long"; then
  ac_init_help=short
fi
m4_divert_pop(99)

AC_ARG_VAR(COQBIN, [path to Coq executables [empty]])
if test ${COQBIN##*/}; then COQBIN=$COQBIN/; fi

AC_ARG_VAR(COQC, [Coq compiler command [coqc]])
AC_MSG_CHECKING([for coqc])
if test ! "$COQC"; then COQC=`which ${COQBIN}coqc`; fi
AC_MSG_RESULT([$COQC])

AC_ARG_VAR(COQDEP, [Coq dependency analyzer command [coqdep]])
AC_MSG_CHECKING([for coqdep])
if test ! "$COQDEP"; then COQDEP=`which ${COQBIN}coqdep`; fi
AC_MSG_RESULT([$COQDEP])

AC_ARG_VAR(COQDOC, [Coq documentation generator command [coqdoc]])
AC_MSG_CHECKING([for coqdoc])
if test ! "$COQDOC"; then COQDOC=`which ${COQBIN}coqdoc`; fi
AC_MSG_RESULT([$COQDOC])

AC_ARG_VAR(COQEXTRAFLAGS, [extra flags passed to Coq compiler [empty]])

AC_ARG_VAR(TIMING)
if test -n "$TIMING"; then
   TIMING_EXTRA="> $<.timing"
   TIMING="-time"
fi
AC_SUBST(TIMING_EXTRA)

AC_MSG_CHECKING([for SSReflect])
AS_IF(
  [ echo "Require Import mathcomp.ssreflect.ssreflect." > conftest.v
    $COQC conftest.v > conftest.err ],
  [ AC_MSG_RESULT([yes]) ],
  [ AC_MSG_RESULT([no])
    AC_MSG_ERROR([ *** Unable to find library mathcomp.ssreflect (http://math-comp.github.io/math-comp/)])])
rm -f conftest.v conftest.vo conftest.err

AC_ARG_VAR(COQUSERCONTRIB, [installation directory [`$COQC -where`/user-contrib]])

if test -z "$COQUSERCONTRIB"; then
  COQUSERCONTRIB="`$COQC -where | tr -d '\r' | tr '\\\\' '/'`/user-contrib"
fi

AC_ARG_VAR(REMAKE, [Remake [vendored version]])

if test -z "$REMAKE"; then
AC_PROG_CXX

AC_MSG_NOTICE([building remake...])
case `$CXX -v 2>&1 | grep -e "^Target:"` in
*mingw*)
	$CXX -Wall -O2 -o remake.exe remake.cpp -lws2_32
	if test $? != 0; then AC_MSG_FAILURE([failed]); fi
	REMAKE=./remake.exe
	;;
*)
	$CXX -Wall -O2 -o remake remake.cpp
	if test $? != 0; then AC_MSG_FAILURE([failed]); fi
	REMAKE=./remake
	;;
esac
fi

AC_CONFIG_FILES(Remakefile)
AC_OUTPUT
